{"version":3,"file":"static\\development\\pages\\_app.js","sources":["webpack:///webpack/bootstrap","webpack:///external \"next/dist/next-server/lib/utils.js\"","webpack:///./lib/accessToken.ts","webpack:///./lib/apollo.tsx","webpack:///./node_modules/next/app.js","webpack:///./node_modules/next/dist/pages/_app.js","webpack:///./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./pages/_app.tsx","webpack:///external \"@apollo/react-hooks\"","webpack:///external \"@apollo/react-ssr\"","webpack:///external \"apollo-cache-inmemory\"","webpack:///external \"apollo-client\"","webpack:///external \"apollo-link\"","webpack:///external \"apollo-link-context\"","webpack:///external \"apollo-link-error\"","webpack:///external \"apollo-link-http\"","webpack:///external \"apollo-link-token-refresh\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"jwt-decode\"","webpack:///external \"next/head\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// object to store loaded chunks\n \t// \"0\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t\"static\\\\development\\\\pages\\\\_app.js\": 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// uncaught error handler for webpack runtime\n \t__webpack_require__.oe = function(err) {\n \t\tprocess.nextTick(function() {\n \t\t\tthrow err; // catch this error by using import().catch()\n \t\t});\n \t};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require(\"next/dist/next-server/lib/utils.js\");","let accessToken = ''\r\n\r\nexport const setAccessToken = (s: string) => {\r\n  accessToken = s\r\n}\r\n\r\nexport const getAccessToken = () => {\r\n  return accessToken\r\n}\r\n","import React from 'react'\r\nimport Head from 'next/head'\r\nimport { ApolloClient } from 'apollo-client'\r\nimport { InMemoryCache, NormalizedCacheObject } from 'apollo-cache-inmemory'\r\nimport { HttpLink } from 'apollo-link-http'\r\nimport { setContext } from 'apollo-link-context'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { TokenRefreshLink } from 'apollo-link-token-refresh'\r\nimport jwtDecode from 'jwt-decode'\r\nimport { getAccessToken, setAccessToken } from './accessToken'\r\nimport { onError } from 'apollo-link-error'\r\nimport { ApolloLink } from 'apollo-link'\r\n\r\n/**\r\n * Creates and provides the apolloContext\r\n * to a next.js PageTree. Use it by wrapping\r\n * your PageComponent via HOC pattern.\r\n * @param {Function|Class} PageComponent\r\n * @param {Object} [config]\r\n * @param {Boolean} [config.ssr=true]\r\n */\r\nexport function withApollo(PageComponent: any, { ssr = true } = {}) {\r\n  const WithApollo = ({ apolloClient, apolloState, ...pageProps }: any) => {\r\n    const client = apolloClient || initApolloClient(apolloState)\r\n    return <PageComponent {...pageProps} apolloClient={client} />\r\n  }\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // Find correct display name\r\n    const displayName = PageComponent.displayName || PageComponent.name || 'Component'\r\n\r\n    // Warn if old way of installing apollo is used\r\n    if (displayName === 'App') {\r\n      console.warn('This withApollo HOC only works with PageComponents.')\r\n    }\r\n\r\n    // Set correct display name for devtools\r\n    WithApollo.displayName = `withApollo(${displayName})`\r\n  }\r\n\r\n  if (ssr || PageComponent.getInitialProps) {\r\n    WithApollo.getInitialProps = async (ctx: any) => {\r\n      const {\r\n        AppTree,\r\n        ctx: { res },\r\n      } = ctx\r\n\r\n      // Run all GraphQL queries in the component tree\r\n      // and extract the resulting data\r\n      const apolloClient = (ctx.ctx.apolloClient = initApolloClient({}))\r\n\r\n      const pageProps = PageComponent.getInitialProps\r\n        ? await PageComponent.getInitialProps(ctx)\r\n        : {}\r\n\r\n      // Only on the server\r\n      if (typeof window === 'undefined') {\r\n        // When redirecting, the response is finished.\r\n        // No point in continuing to render\r\n        if (res && res.finished) {\r\n          return {}\r\n        }\r\n\r\n        if (ssr) {\r\n          try {\r\n            // Run all GraphQL queries\r\n            const { getDataFromTree } = await import('@apollo/react-ssr')\r\n            await getDataFromTree(\r\n              <AppTree\r\n                pageProps={{\r\n                  ...pageProps,\r\n                  apolloClient,\r\n                }}\r\n                apolloClient={apolloClient}\r\n              />\r\n            )\r\n          } catch (error) {\r\n            // Prevent Apollo Client GraphQL errors from crashing SSR.\r\n            // Handle them in components via the data.error prop:\r\n            // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error\r\n            console.error('Error while running `getDataFromTree`', error)\r\n          }\r\n        }\r\n\r\n        // getDataFromTree does not call componentWillUnmount\r\n        // head side effect therefore need to be cleared manually\r\n        Head.rewind()\r\n      }\r\n\r\n      // Extract query data from the Apollo store\r\n      const apolloState = apolloClient.cache.extract()\r\n\r\n      return {\r\n        ...pageProps,\r\n        apolloState,\r\n      }\r\n    }\r\n  }\r\n\r\n  return WithApollo\r\n}\r\n\r\nlet apolloClient: ApolloClient<NormalizedCacheObject> | null = null\r\n\r\n/**\r\n * Always creates a new apollo client on the server\r\n * Creates or reuses apollo client in the browser.\r\n */\r\nfunction initApolloClient(initState: any) {\r\n  // Make sure to create a new client for every server-side request so that data\r\n  // isn't shared between connections (which would be bad)\r\n  if (typeof window === 'undefined') {\r\n    return createApolloClient(initState)\r\n  }\r\n\r\n  // Reuse client on the client-side\r\n  if (!apolloClient) {\r\n    // setAccessToken(cookie.parse(document.cookie).test);\r\n    apolloClient = createApolloClient(initState)\r\n  }\r\n\r\n  return apolloClient\r\n}\r\n\r\n/**\r\n * Creates and configures the ApolloClient\r\n * @param  {Object} [initialState={}]\r\n * @param  {Object} config\r\n */\r\nfunction createApolloClient(initialState = {}) {\r\n  const httpLink = new HttpLink({\r\n    uri: 'http://localhost:4000/graphql',\r\n    credentials: 'include',\r\n    fetch,\r\n  })\r\n\r\n  const refreshLink = new TokenRefreshLink({\r\n    accessTokenField: 'accessToken',\r\n    isTokenValidOrUndefined: () => {\r\n      const token = getAccessToken()\r\n\r\n      if (!token) {\r\n        return true\r\n      }\r\n\r\n      try {\r\n        const { exp } = jwtDecode(token)\r\n        if (Date.now() >= exp * 1000) {\r\n          return false\r\n        } else {\r\n          return true\r\n        }\r\n      } catch {\r\n        return false\r\n      }\r\n    },\r\n    fetchAccessToken: () => {\r\n      return fetch('http://localhost:4000/refresh_token', {\r\n        method: 'POST',\r\n        credentials: 'include',\r\n      })\r\n    },\r\n    handleFetch: (accessToken) => {\r\n      setAccessToken(accessToken)\r\n    },\r\n    handleError: (err) => {\r\n      console.warn('Your refresh token is invalid. Try to relogin')\r\n      console.error(err)\r\n    },\r\n  })\r\n\r\n  const authLink = setContext((_request, { headers }) => {\r\n    const token = getAccessToken()\r\n    return {\r\n      headers: {\r\n        ...headers,\r\n        authorization: token ? `bearer ${token}` : '',\r\n      },\r\n    }\r\n  })\r\n\r\n  const errorLink = onError(({ graphQLErrors, networkError }) => {\r\n    console.log(graphQLErrors)\r\n    console.log(networkError)\r\n  })\r\n\r\n  return new ApolloClient({\r\n    ssrMode: typeof window === 'undefined', // Disables forceFetch on the server (so queries are only run once)\r\n    link: ApolloLink.from([refreshLink, authLink, errorLink, httpLink]),\r\n    cache: new InMemoryCache().restore(initialState),\r\n  })\r\n}\r\n","module.exports = require('./dist/pages/_app')\n","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.Container=Container;exports.createUrl=createUrl;exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _utils=require(\"../next-server/lib/utils\");exports.AppInitialProps=_utils.AppInitialProps;/**\n * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n * This allows for keeping state between navigation, custom error handling, injecting additional data.\n */async function appGetInitialProps(_ref){var{Component,ctx}=_ref;var pageProps=await(0,_utils.loadGetInitialProps)(Component,ctx);return{pageProps};}class App extends _react.default.Component{// Kept here for backwards compatibility.\n// When someone ended App they could call `super.componentDidCatch`.\n// @deprecated This method is no longer needed. Errors are caught at the top level\ncomponentDidCatch(error,_errorInfo){throw error;}render(){var{router,Component,pageProps,__N_SSG,__N_SSP}=this.props;return _react.default.createElement(Component,Object.assign({},pageProps,// we don't add the legacy URL prop if it's using non-legacy\n// methods like getStaticProps and getServerSideProps\n!(__N_SSG||__N_SSP)?{url:createUrl(router)}:{}));}}exports.default=App;App.origGetInitialProps=appGetInitialProps;App.getInitialProps=appGetInitialProps;var warnContainer;var warnUrl;if(process.env.NODE_ENV!=='production'){warnContainer=(0,_utils.execOnce)(()=>{console.warn(\"Warning: the `Container` in `_app` has been deprecated and should be removed. https://err.sh/zeit/next.js/app-container-deprecated\");});warnUrl=(0,_utils.execOnce)(()=>{console.error(\"Warning: the 'url' property is deprecated. https://err.sh/zeit/next.js/url-deprecated\");});}// @deprecated noop for now until removal\nfunction Container(p){if(process.env.NODE_ENV!=='production')warnContainer();return p.children;}function createUrl(router){// This is to make sure we don't references the router object at call time\nvar{pathname,asPath,query}=router;return{get query(){if(process.env.NODE_ENV!=='production')warnUrl();return query;},get pathname(){if(process.env.NODE_ENV!=='production')warnUrl();return pathname;},get asPath(){if(process.env.NODE_ENV!=='production')warnUrl();return asPath;},back:()=>{if(process.env.NODE_ENV!=='production')warnUrl();router.back();},push:(url,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();return router.push(url,as);},pushTo:(href,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();var pushRoute=as?href:'';var pushUrl=as||href;return router.push(pushRoute,pushUrl);},replace:(url,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();return router.replace(url,as);},replaceTo:(href,as)=>{if(process.env.NODE_ENV!=='production')warnUrl();var replaceRoute=as?href:'';var replaceUrl=as||href;return router.replace(replaceRoute,replaceUrl);}};}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","import App from 'next/app'\r\nimport React from 'react'\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport { withApollo } from '../lib/apollo'\r\n\r\nclass MyApp extends App<any> {\r\n  render() {\r\n    const { Component, pageProps, apolloClient } = this.props\r\n    return (\r\n      <ApolloProvider client={apolloClient}>\r\n        <Component {...pageProps} />\r\n      </ApolloProvider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withApollo(MyApp)\r\n","module.exports = require(\"@apollo/react-hooks\");","module.exports = require(\"@apollo/react-ssr\");","module.exports = require(\"apollo-cache-inmemory\");","module.exports = require(\"apollo-client\");","module.exports = require(\"apollo-link\");","module.exports = require(\"apollo-link-context\");","module.exports = require(\"apollo-link-error\");","module.exports = require(\"apollo-link-http\");","module.exports = require(\"apollo-link-token-refresh\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"jwt-decode\");","module.exports = require(\"next/head\");","module.exports = require(\"react\");"],"mappingsrGA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;AAQA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAMA;AACA;AAAA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAFA;AAIA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAKA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AAmCA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAFA;AADA;AAMA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAHA;AAKA;;;;;;;;;;;AC/LA;;;;;;;;;;;;;ACAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AANA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AATA;AACA;AAUA;;;;;;;;;;;;;;;;;;;;;;;AChBA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}