{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\E072894\\\\Documents\\\\repos\\\\nodejs\\\\nextjs_repos\\\\ssr_refresh_token\\\\web\\\\pages\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useUsersQuery } from '../generated/graphql';\nimport Layout from '../components/Layout';\nexport default (() => {\n  const {\n    data\n  } = useUsersQuery({\n    fetchPolicy: 'network-only'\n  });\n\n  if (!data) {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, \"loading...\"));\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"users:\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, data.users.map(x => {\n    return __jsx(\"li\", {\n      key: x.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, x.email, \", \", x.id);\n  }))));\n});","map":{"version":3,"sources":["C:/Users/E072894/Documents/repos/nodejs/nextjs_repos/ssr_refresh_token/web/pages/index.tsx"],"names":["React","useUsersQuery","Layout","data","fetchPolicy","users","map","x","id","email"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,gBAAe,MAAM;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAWF,aAAa,CAAC;AAAEG,IAAAA,WAAW,EAAE;AAAf,GAAD,CAA9B;;AAEA,MAAI,CAACD,IAAL,EAAW;AACT,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAgBC,CAAD,IAAO;AACrB,WACE;AAAI,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,CAAC,CAACE,KADL,QACcF,CAAC,CAACC,EADhB,CADF;AAKD,GANA,CADH,CAFF,CADF,CADF;AAgBD,CA3BD","sourcesContent":["import React from 'react'\r\nimport { useUsersQuery } from '../generated/graphql'\r\nimport Layout from '../components/Layout'\r\n\r\nexport default () => {\r\n  const { data } = useUsersQuery({ fetchPolicy: 'network-only' })\r\n\r\n  if (!data) {\r\n    return (\r\n      <Layout>\r\n        <div>loading...</div>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div>\r\n        <div>users:</div>\r\n        <ul>\r\n          {data.users.map((x) => {\r\n            return (\r\n              <li key={x.id}>\r\n                {x.email}, {x.id}\r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}