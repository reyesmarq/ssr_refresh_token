{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\E072894\\\\Documents\\\\repos\\\\nodejs\\\\nextjs_repos\\\\ssr_refresh_token\\\\web\\\\pages\\\\login.tsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../components/Layout';\nimport { useLoginMutation, MeDocument } from '../generated/graphql';\nimport { setAccessToken } from '../lib/accessToken';\nimport Router from 'next/router';\nexport default (function () {\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useLoginMutation = useLoginMutation(),\n      _useLoginMutation2 = _slicedToArray(_useLoginMutation, 1),\n      login = _useLoginMutation2[0];\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: function _callee(e) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              console.log('form submitted');\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(login({\n                variables: {\n                  email: email,\n                  password: password\n                },\n                update: function update(store, _ref) {\n                  var data = _ref.data;\n\n                  if (!data) {\n                    return null;\n                  }\n\n                  store.writeQuery({\n                    query: MeDocument,\n                    data: {\n                      me: data.login.user\n                    }\n                  });\n                }\n              }));\n\n            case 4:\n              response = _context.sent;\n              console.log(response);\n\n              if (response && response.data) {\n                setAccessToken(response.data.login.accessToken);\n              }\n\n              Router.push('/');\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    value: email,\n    placeholder: \"email\",\n    onChange: function onChange(e) {\n      setEmail(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    value: password,\n    placeholder: \"password\",\n    onChange: function onChange(e) {\n      setPassword(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"login\")));\n});","map":{"version":3,"sources":["C:/Users/E072894/Documents/repos/nodejs/nextjs_repos/ssr_refresh_token/web/pages/login.tsx"],"names":["React","useState","Layout","useLoginMutation","MeDocument","setAccessToken","Router","email","setEmail","password","setPassword","login","e","preventDefault","console","log","variables","update","store","data","writeQuery","query","me","user","response","accessToken","push","target","value"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,gBAAT,EAAoCC,UAApC,QAAsD,sBAAtD;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,gBAAe,YAAM;AAAA,kBACOL,QAAQ,CAAC,EAAD,CADf;AAAA,MACZM,KADY;AAAA,MACLC,QADK;;AAAA,mBAEaP,QAAQ,CAAC,EAAD,CAFrB;AAAA,MAEZQ,QAFY;AAAA,MAEFC,WAFE;;AAAA,0BAGHP,gBAAgB,EAHb;AAAA;AAAA,MAGZQ,KAHY;;AAKnB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAE,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRA,cAAAA,CAAC,CAACC,cAAF;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAFQ;AAAA,+CAGeJ,KAAK,CAAC;AAC3BK,gBAAAA,SAAS,EAAE;AACTT,kBAAAA,KAAK,EAALA,KADS;AAETE,kBAAAA,QAAQ,EAARA;AAFS,iBADgB;AAK3BQ,gBAAAA,MAAM,EAAE,gBAACC,KAAD,QAAqB;AAAA,sBAAXC,IAAW,QAAXA,IAAW;;AAC3B,sBAAI,CAACA,IAAL,EAAW;AACT,2BAAO,IAAP;AACD;;AAEDD,kBAAAA,KAAK,CAACE,UAAN,CAA0B;AACxBC,oBAAAA,KAAK,EAAEjB,UADiB;AAExBe,oBAAAA,IAAI,EAAE;AACJG,sBAAAA,EAAE,EAAEH,IAAI,CAACR,KAAL,CAAWY;AADX;AAFkB,mBAA1B;AAMD;AAhB0B,eAAD,CAHpB;;AAAA;AAGFC,cAAAA,QAHE;AAsBRV,cAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;;AAEA,kBAAIA,QAAQ,IAAIA,QAAQ,CAACL,IAAzB,EAA+B;AAC7Bd,gBAAAA,cAAc,CAACmB,QAAQ,CAACL,IAAT,CAAcR,KAAd,CAAoBc,WAArB,CAAd;AACD;;AAEDnB,cAAAA,MAAM,CAACoB,IAAP,CAAY,GAAZ;;AA5BQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,KAAK,EAAEnB,KADT;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,QAAQ,EAAE,kBAACK,CAAD,EAAO;AACfJ,MAAAA,QAAQ,CAACI,CAAC,CAACe,MAAF,CAASC,KAAV,CAAR;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhCF,EAyCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAEnB,QAFT;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,QAAQ,EAAE,kBAACG,CAAD,EAAO;AACfF,MAAAA,WAAW,CAACE,CAAC,CAACe,MAAF,CAASC,KAAV,CAAX;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzCF,EAmDE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnDF,CADF,CADF;AAyDD,CA9DD","sourcesContent":["import React, { useState } from 'react'\r\nimport Layout from '../components/Layout'\r\nimport { useLoginMutation, MeQuery, MeDocument } from '../generated/graphql'\r\nimport { setAccessToken } from '../lib/accessToken'\r\nimport Router from 'next/router'\r\n\r\nexport default () => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [login] = useLoginMutation()\r\n\r\n  return (\r\n    <Layout>\r\n      <form\r\n        onSubmit={async (e) => {\r\n          e.preventDefault()\r\n          console.log('form submitted')\r\n          const response = await login({\r\n            variables: {\r\n              email,\r\n              password,\r\n            },\r\n            update: (store, { data }) => {\r\n              if (!data) {\r\n                return null\r\n              }\r\n\r\n              store.writeQuery<MeQuery>({\r\n                query: MeDocument,\r\n                data: {\r\n                  me: data.login.user,\r\n                },\r\n              })\r\n            },\r\n          })\r\n\r\n          console.log(response)\r\n\r\n          if (response && response.data) {\r\n            setAccessToken(response.data.login.accessToken)\r\n          }\r\n\r\n          Router.push('/')\r\n        }}\r\n      >\r\n        <div>\r\n          <input\r\n            value={email}\r\n            placeholder=\"email\"\r\n            onChange={(e) => {\r\n              setEmail(e.target.value)\r\n            }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            placeholder=\"password\"\r\n            onChange={(e) => {\r\n              setPassword(e.target.value)\r\n            }}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </Layout>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}